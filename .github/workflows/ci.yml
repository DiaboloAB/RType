name: CI Workflow

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Python and venv
        run: |
          sudo apt-get update
          sudo apt-get install -y python3 python3-venv

      - name: Set up virtual environment and install Conan
        run: |
          python3 -m venv venv
          source venv/bin/activate
          pip install conan

      - name: Conan install dependencies
        run: |
          source venv/bin/activate
          conan profile detect --force
          conan install . --output-folder=build/conan --build=missing -c "tools.system.package_manager:mode=install" -c "tools.system.package_manager:sudo=true"

      - name: Build project with CMake
        run: |
          cd build
          cmake .. -DCMAKE_TOOLCHAIN_FILE=conan/conan_toolchain.cmake -DCMAKE_BUILD_TYPE=Release
          cmake --build .

      - name: Check for binaries
        run: |
          if [ -f ../r-type_client ] && [ -f ../r-type_server ]; then
            echo "Build successful: Binaries found"
          else
            echo "Build failed: Binaries not found"
            exit 1
          fi

  check-style:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Install clang-format 18
        run: |
          sudo apt-get update
          sudo apt-get install clang-format-18
      - name: Run clang-format check
        run: |
          chmod +x ./tools.sh
          ./tools.sh check-clang . > clang-format-errors.txt
        continue-on-error: false
        id: clang-format-check
      - name: Display clang-format errors
        if: failure()
        run: |
          echo "Clang-format errors detected:"
          cat ./clang-format-errors.txt

  push-to-mirror:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && success()
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: pixta-dev/repository-mirroring-action@v1
        with:
          target_repo_url: git@github.com:EpitechPromo2027/B-CPP-500-REN-5-1-rtype-maxence.largeot.git
          ssh_private_key: ${{ secrets.SSH_PRIVATE_KEY }}
